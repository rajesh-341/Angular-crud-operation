<mat-toolbar color="primary">
  <button mat-icon-button class="example-icon" aria-label="Example icon-button with menu icon">
    <mat-icon>library_add</mat-icon>
  </button>
  <span>Employees List</span>
  <span class="example-spacer"></span>
  <button mat-icon-button class="example-icon favorite-icon" aria-label="Example icon-button with heart icon">
    <mat-icon>favorite</mat-icon>
  </button>
  <button mat-raised-button color="" (click)="openDialog()">Add employee</button>
</mat-toolbar>

<div class="container">
  <div style="margin-top: 8px;">
    <mat-form-field appearance="standard">
      <mat-label>Filter</mat-label>
      <input matInput (keyup)="applyFilter($event)" placeholder="Ex. Mia" #input>
    </mat-form-field>
    
    <div class="mat-elevation-z8">
      <table mat-table [dataSource]="dataSource" matSort>
    
        <ng-container matColumnDef="eName">
          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>
          <td mat-cell *matCellDef="let row"> {{row.eName}} </td>
        </ng-container>
    
        <ng-container matColumnDef="email">
          <th mat-header-cell *matHeaderCellDef mat-sort-header> Email Id </th>
          <td mat-cell *matCellDef="let row"> {{row.email}} </td>
        </ng-container>
    
        
        <ng-container matColumnDef="martial">
          <th mat-header-cell *matHeaderCellDef mat-sort-header> Martial Status </th>
          <td mat-cell *matCellDef="let row"> {{row.martial}} </td>
        </ng-container>
    
        <ng-container matColumnDef="phone">
          <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone No </th>
          <td mat-cell *matCellDef="let row"> {{row.phone}} </td>
        </ng-container>

        <ng-container matColumnDef="position">
          <th mat-header-cell *matHeaderCellDef mat-sort-header> Position </th>
          <td mat-cell *matCellDef="let row"> {{row.position}} </td>
        </ng-container>
    
        
        <ng-container matColumnDef="dob">
          <th mat-header-cell *matHeaderCellDef mat-sort-header> Date of Birth </th>
          <td mat-cell *matCellDef="let row"> {{row.dob | date}} </td>
        </ng-container>
    
        <ng-container matColumnDef="jDate">
          <th mat-header-cell *matHeaderCellDef mat-sort-header> Joining Date </th>
          <td mat-cell *matCellDef="let row"> {{row.jDate | date}} </td>
        </ng-container>

        <ng-container matColumnDef="operation">
          <th mat-header-cell *matHeaderCellDef mat-sort-header> Operation </th>
          <td mat-cell *matCellDef="let row"> 
            <button mat-icon-button color="primary" (click)="updateList(row)">
              <mat-icon>update</mat-icon>
            </button>
            <button mat-icon-button color="warn" (click)="deleteList(row.id)">
              <mat-icon>delete_forever</mat-icon>
            </button>
          </td>
        </ng-container>
    
        <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
        <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>
    
        <tr class="mat-row" *matNoDataRow>
          <td class="mat-cell" colspan="4">No data matching the filter "{{input.value}}"</td>
        </tr>
      </table>
    
      <mat-paginator [pageSizeOptions]="[5, 10, 25, 100]" aria-label="Select page of users"></mat-paginator>
    </div>
  </div>
</div>



.example-spacer 
{
    flex: 1 1 auto;
}

table {
    width: 100%;
  }
  
  .mat-form-field {
    font-size: 14px;
    width: 100%;
  }

  .container{
      max-width: 1250px;
      margin: 0 auto;
  }




import { Component, OnInit, ViewChild } from '@angular/core';
import {MatDialog} from '@angular/material/dialog';
import {DialogueBoxComponent} from './dialogue-box/dialogue-box.component'
import {EListService} from './service/e-list.service'
import {MatPaginator} from '@angular/material/paginator';
import {MatSort} from '@angular/material/sort';
import {MatTableDataSource} from '@angular/material/table';


@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss']
})
export class AppComponent implements OnInit{
  title = 'employeeCrud';
  displayedColumns: string[] = ['eName', 'email', 'phone', 'martial', 'position', 'dob', 'jDate','operation'];
  dataSource!: MatTableDataSource<any>;

  
  @ViewChild(MatPaginator) paginator!: MatPaginator;
  @ViewChild(MatSort) sort!: MatSort;
constructor(private mat : MatDialog, private connect: EListService){}
  ngOnInit(): void {
   this.getAllEmployee();
  }
  openDialog() {
    this.mat.open(DialogueBoxComponent,{
      width:"25%"
    }).afterClosed().subscribe(val=>{
      if(val === 'submit'){
        this.getAllEmployee();
      }
    })
  }
  getAllEmployee(){
    this.connect.getEmployee().subscribe({
      next:(res)=>{
       this.dataSource = new MatTableDataSource(res);
       this.dataSource.paginator = this.paginator;
       this.dataSource.sort = this.sort;
      },
      error:(err)=>{
        alert('error occured')
      }
    })
  }
  applyFilter(event: Event) {
    const filterValue = (event.target as HTMLInputElement).value;
    this.dataSource.filter = filterValue.trim().toLowerCase();

    if (this.dataSource.paginator) {
      this.dataSource.paginator.firstPage();
    }
  }

  updateList(row:any){
    this.mat.open(DialogueBoxComponent,{
      data: row,
    }).afterClosed().subscribe(val=>{
      if(val === 'update')
      {
        this.getAllEmployee();
      }
    })
  }

  deleteList(id:number){
    this.connect.deleteEmployee(id).subscribe({next:(res)=>{
      alert("deleted successfully");
      this.getAllEmployee();
    },
    error:()=>
    {
      alert("its not deleted")
    }
    })
  }
}



import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

import { AppComponent } from './app.component';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import {Component} from '@angular/core';
import {MatToolbarModule} from '@angular/material/toolbar';
import {MatIconModule} from '@angular/material/icon';
import {MatButtonModule} from '@angular/material/button';
import {MatDialogModule} from '@angular/material/dialog';
import {DialogueBoxComponent} from './dialogue-box/dialogue-box.component';
import {MatFormFieldModule} from '@angular/material/form-field';
import {MatInputModule} from '@angular/material/input';
import {MatSelectModule} from '@angular/material/select';
import {MatDatepickerModule} from '@angular/material/datepicker';
import {MatNativeDateModule} from '@angular/material/core'
import {MatRadioModule} from '@angular/material/radio';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';
import { HttpClient } from '@angular/common/http';
import {MatTableModule} from '@angular/material/table';
import {MatPaginatorModule} from '@angular/material/paginator';
import {MatSortModule} from '@angular/material/sort';
@NgModule({
  declarations: [
    AppComponent,
    DialogueBoxComponent,
  ],
  imports: [
    BrowserModule,
    BrowserAnimationsModule,
    MatToolbarModule,
    MatIconModule,
    MatButtonModule,
    MatDialogModule,
    MatFormFieldModule,
    MatInputModule,
    MatSelectModule,
    MatDatepickerModule,
    MatNativeDateModule,
    MatRadioModule,
    ReactiveFormsModule,
    FormsModule,
    HttpClientModule,
    MatTableModule,
    MatPaginatorModule,
    MatSortModule,
    // HttpClient,
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
